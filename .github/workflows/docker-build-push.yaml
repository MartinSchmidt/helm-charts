name: Create and publish a Docker image

on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy: 
      matrix: 
        path: ["charts/argo-events/container", "charts/argo-wf/container", "charts/cache/container", "charts/ceph/container", "charts/cni/container", 
                "charts/dns-server/container", "charts/git-server/container", "charts/grafana/container", "charts/ha-proxy/container", "charts/harbor/container",
                "charts/jaeger/container", "charts/kafka/container", "charts/lightvessel/container", "charts/loadbalancer/container", "charts/loki/container",
                "charts/nidhogg/container", "charts/ntp/container", "charts/prometheus/container", "charts/rook/container", "charts/rook-helper/container",
                "charts/thanos/container", "charts/traefik/container", "charts/vault/container"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.path }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
